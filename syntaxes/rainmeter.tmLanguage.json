{
  "name": "rainmeter",
  "scopeName": "source.rainmeter",
  "patterns": [
    { "include": "#comment" },
    { "include": "#section" },
    { "include": "#option" }
  ],
  "repository": {
    "comment": {
      "match": "^(;).*",
      "name": "comment.line.semicolon.rainmeter",
      "captures": {
        "1": { "name": "punctuation.definition.comment.begin.rainmeter" }
      }
    },
    "section": {
      "begin": "^\\[",
      "end": "\\]\\s*$",
      "name": "meta.section.rainmeter",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.section.begin.rainmeter" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.definition.section.end.rainmeter" }
      },
      "patterns": [
        {
          "match": "(?<=\\[)(Skin|Rainmeter|Metadata|TrayMeasure|Variables)(?=\\])",
          "name": "constant.language.type.rainmeter"
        },
        {
          "match": "(?<=\\[)[\\w]+(?=\\])",
          "name": "entity.name.type.rainmeter"
        }
      ]
    },
    "option": {
      "begin": "^(?!\\s*$)",
      "end": "$",
      "name": "meta.option.rainmeter",
      "patterns": [
        { "include": "#option-include" },
        { "include": "#option-bang" },
        { "include": "#option-type" },
        { "include": "#option-text" },
        { "include": "#option-meterstyle" },
        { "include": "#option-group" },
        { "include": "#option-defualt" }
      ]
    },
    "option-defualt": {
      "begin": "^((\\w+)\\b\\s*)(=)",
      "end": "$",
      "contentName": "meta.value.option.defualt.rainmeter",
      "beginCaptures": {
        "1": { "name": "meta.key.option.defualt.rainmeter" },
        "2": { "name": "support.type.property-name.rainmeter" },
        "3": { "name": "punctuation.separator.key-value.rainmeter" }
      },
      "patterns": [
        { "include": "#string-quoted" },
        { "include": "#variable" },
        { "include": "#numeric" },
        { "include": "#string-unquoted" }
      ]
    },
    "option-bang": {
      "begin": "^((\\w+Action\\d*)\\s*)(=)",
      "end": "$",
      "contentName": "meta.value.option.bang.rainmeter",
      "beginCaptures": {
        "1": { "name": "meta.key.option.bang.rainmeter" },
        "2": { "name": "support.type.property-name.rainmeter" },
        "3": { "name": "punctuation.separator.key-value.rainmeter" }
      },
      "patterns": [
        { "include": "#bang-single" },
        { "include": "#bang-multiple" }
      ]
    },
    "option-include": {
      "begin": "^((@include\\w*)\\s*)(=)",
      "end": "$",
      "contentName": "meta.value.option.include.rainmeter",
      "beginCaptures": {
        "1": { "name": "meta.key.option.include.rainmeter" },
        "2": { "name": "support.type.property-name.rainmeter" },
        "3": { "name": "punctuation.separator.key-value.rainmeter" }
      },
      "patterns": [
        {
          "begin": "(?<==)\\s*",
          "end": "\\s*$",
          "contentName": "meta.path.rainmeter",
          "patterns": [
            {
              "match": "(\\.)(ini|inc)",
              "captures": {
                "1": {
                  "name": "punctuation.separator.filename-extension.rainmeter"
                },
                "2": {
                  "name": "support.constant.media-type.rainmeter"
                }
              }
            },
            {
              "match": "\\\\",
              "name": "punctuation.support.path.rainmeter"
            },
            { "include": "#variable" },
            { "include": "#string-unquoted" }
          ]
        }
      ]
    },
    "option-meterstyle": {
      "begin": "^((MeterStyle)\\s*)(=)",
      "end": "$",
      "contentName": "meta.value.option.meterstyle.rainmeter",
      "beginCaptures": {
        "1": { "name": "meta.key.option.meterstyle.rainmeter" },
        "2": { "name": "support.type.property-name.rainmeter" },
        "3": { "name": "punctuation.separator.key-value.rainmeter" }
      },
      "patterns": [
        { "include": "#variable" },
        {
          "match": "\\w+",
          "name": "entity.other.inherited-class.rainmeter"
        },
        {
          "match": "\\|",
          "name": "punctuation.separator.meterstyle.rainmeter"
        }
      ]
    },
    "option-group": {
      "begin": "^((Group)\\s*)(=)",
      "end": "$",
      "contentName": "meta.value.option.group.rainmeter",
      "beginCaptures": {
        "1": { "name": "meta.key.option.group.rainmeter" },
        "2": { "name": "support.type.property-name.rainmeter" },
        "3": { "name": "punctuation.separator.key-value.rainmeter" }
      },
      "patterns": [
        { "include": "#variable" },
        {
          "match": "\\w+",
          "name": "entity.name.class.rainmeter"
        },
        {
          "match": "\\|",
          "name": "punctuation.separator.group.rainmeter"
        }
      ]
    },
    "option-type": {
      "begin": "^((Meter|Measure|Plugin|MeasureName\\d*)\\s*)(=)",
      "end": "$",
      "contentName": "meta.value.option.type.rainmeter",
      "beginCaptures": {
        "1": { "name": "meta.key.option.type.rainmeter" },
        "2": { "name": "support.type.property-name.rainmeter" },
        "3": { "name": "punctuation.separator.key-value.rainmeter" }
      },
      "patterns": [
        {
          "match": "(?<=^Meter\\s*=\\s*)(Bar|Bitmap|Button|Histogram|Image|Line|Rotator|Roundline|Shape|String)(?=\\s*$)",
          "name": "constant.language.type.meter.rainmeter"
        },
        {
          "match": "(?<=^Measure\\s*=\\s*)(Calc|CPU|FreeDiskSpace|Loop|MediaKey|Memory|Net|NowPlaying|Plugin|RecycleManager|Registry|Script|String|Time|Uptime|WebParser)(?=\\s*$)",
          "name": "constant.language.type.measure.rainmeter"
        },
        {
          "match": "(?<=^MeasureName\\d*\\s*=\\s*)(\\w+)(?=\\s*$)",
          "name": "entity.name.type.rainmeter"
        },
        {
          "match": "(?<=^Plugin\\s*=\\s*)(ActionTimer|AudioLevel|CoreTemp|FileView|FolderInfo|InputText|Ping|Power|Process|Quote|ResMon|RunCommand|SpeedFan|SysInfo|UsageMonitor|WiFiStatus|Win7Audio|WindowMessage)(?=\\s*$)",
          "name": "constant.language.type.plugin.rainmeter"
        },
        {
          "match": "(?<=^Plugin\\s*=\\s*)(AdvancedCPU|iTunes|PerfMon)(?=\\s*$)",
          "name": "constant.language.type.plugin.deprecated.rainmeter"
        },
        {
          "match": "(?<=^Plugin\\s*=\\s*).*(\\b\\w+)(\\.)(dll|DLL)(?=\\s*$)",
          "captures": {
            "1": {
              "name": "constant.language.type.plugin.additional.rainmeter"
            },
            "2": {
              "name": "punctuation.separator.filename-extension.rainmeter"
            },
            "3": {
              "name": "support.constant.media-type.rainmeter"
            }
          }
        }
      ]
    },
    "option-text": {
      "begin": "^((Text)\\s*)(=)",
      "end": "$",
      "contentName": "meta.value.option.text.rainmeter",
      "beginCaptures": {
        "1": { "name": "meta.key.option.text.rainmeter" },
        "2": { "name": "support.type.property-name.rainmeter" },
        "3": { "name": "punctuation.separator.key-value.rainmeter" }
      },
      "patterns": [
        {
          "match":"%\\d+\\b",
          "name":"variable.language.rainmeter"
        },
        { "include": "#string-quoted" },
        { "include": "#variable" },
        { "include": "#string-unquoted" }
      ]
    },
    "bang-single": {
      "patterns": [
        {
          "match": "(?<==\\s*)(!{0,1}\\w+)\\b",
          "captures": {
            "1": { "name": "support.function.bang.rainmeter" }
          }
        },
        { "include": "#string-quoted" },
        { "include": "#variable" },
        { "include": "#numeric" }
      ]
    },
    "bang-multiple": {
      "begin": "(?<==\\s*)",
      "end": "$",
      "contentName": "meta.bang-multiple.value.option.bang.rainmeter",
      "patterns": [
        {
          "match": "(\\[)(!{0,1}\\w+)\\b",
          "captures": {
            "1": { "name": "punctuation.definition.bang.begin.rainmeter" },
            "2": { "name": "support.function.bang.rainmeter" }
          }
        },
        {
          "match": "\\]",
          "name": "punctuation.definition.bang.end.rainmeter"
        },
        { "include": "#string-quoted" },
        { "include": "#variable" },
        { "include": "#numeric" }
      ]
    },
    "numeric": {
      "name": "storage.type.number.rainmeter",
      "patterns": [
        {
          "match": "(?<!\\.)\\b(\\d+)\\b(?!\\.)",
          "captures": { "1": { "name": "constant.numeric.int.rainmeter" } }
        },
        {
          "match": "(?<!\\.)\\b(\\d+\\.\\d+)\\b(?!\\.)",
          "captures": { "1": { "name": "constant.numeric.float.rainmeter" } }
        },
        {
          "match": "(?<!\\.)\\b((0[xX])[0-9a-fA-F]+)\\b(?!\\.)",
          "captures": {
            "1": { "name": "constant.numeric.hex.rainmeter" },
            "2": { "name": "support.type.numeric.hex.rainmeter" }
          }
        },
        {
          "match": "(?<!\\.)\\b((0[oO])[0-7]+)\\b(?!\\.)",
          "captures": {
            "1": { "name": "constant.numeric.oct.rainmeter" },
            "2": { "name": "support.type.numeric.oct.rainmeter" }
          }
        },
        {
          "match": "(?<!\\.)\\b((0[bB])[01]+)\\b(?!\\.)",
          "captures": {
            "1": { "name": "constant.numeric.bin.rainmeter" },
            "2": { "name": "support.type.numeric.bin.rainmeter" }
          }
        }
      ]
    },
    "variable": {
      "patterns": [
        {
          "begin": "#",
          "end": "#",
          "contentName": "variable.other.readwrite.rainmeter",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.variable.begin.rainmeter" }
          },
          "endCaptures": {
            "0": { "name": "punctuation.definition.variable.begin.rainmeter" }
          }
        },
        {
          "begin": "\\$",
          "end": "\\$",
          "contentName": "variable.other.readwrite.event.rainmeter",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.variable.event.begin.rainmeter"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.variable.event.begin.rainmeter"
            }
          }
        },
        {
          "begin": "%",
          "end": "%",
          "contentName": "variable.other.readwrite.env.rainmeter",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.variable.env.begin.rainmeter"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.variable.env.begin.rainmeter"
            }
          }
        }
      ]
    },
    "string-unquoted": {
      "match": "\\w+",
      "name": "string.unquoted.rainmeter"
    },
    "string-quoted": {
      "patterns": [
        {
          "begin": "'",
          "end": "'",
          "contentName": "string.quoted.single.rainmeter",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.string.begin.rainmeter" }
          },
          "endCaptures": {
            "0": { "name": "punctuation.definition.string.begin.rainmeter" }
          }
        },
        {
          "begin": "\"",
          "end": "\"",
          "contentName": "string.quoted.double.rainmeter",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.string.begin.rainmeter" }
          },
          "endCaptures": {
            "0": { "name": "punctuation.definition.string.begin.rainmeter" }
          }
        }
      ]
    }
  }
}
