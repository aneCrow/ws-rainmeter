{
  "name": "rainmeter",
  "scopeName": "source.rainmeter",
  "patterns": [
    { "include": "#comment" },
    { "include": "#section" },
    { "include": "#option" }
  ],
  "repository": {
    "comment": {
      "match": "^(;).*",
      "name": "comment.line.semicolon.rainmeter",
      "captures": {
        "1": { "name": "punctuation.definition.comment.begin.rainmeter" }
      }
    },
    "section": {
      "begin": "^\\[",
      "end": "\\]\\s*$",
      "name": "meta.section.rainmeter",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.section.begin.rainmeter" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.definition.section.end.rainmeter" }
      },
      "patterns": [
        {
          "match": "(?<=\\[)(Skin|Rainmeter|Metadata|TrayMeasure|Variables)(?=\\])",
          "name": "constant.language.type.rainmeter"
        },
        {
          "match": "(?<=\\[)[\\w]+(?=\\])",
          "name": "entity.name.type.rainmeter"
        }
      ]
    },
    "option": {
      "begin": "^(?!\\s*$)",
      "end": "$",
      "name": "meta.option.rainmeter",
      "patterns": [
        { "include": "#option-bang" },
        { "include": "#option-defualt" }
      ]
    },
    "option-defualt": {
      "begin": "^((\\w+)\\b\\s*)(=)\\s*",
      "end": "$",
      "contentName": "meta.value.rainmeter",
      "beginCaptures": {
        "1": { "name": "meta.key.rainmeter" },
        "2": { "name": "entity.other.attribute-name.rainmeter" },
        "3": { "name": "punctuation.separator.key-value.rainmeter" }
      },
      "patterns": [
        { "include": "#numeric" },
        { "include": "#variable" },
        { "include": "#string-quoted" },
        { "include": "#string-unquoted" }
      ]
    },
    "option-bang": {
      "begin": "^(\\w+Action\\d*)\\s*(=)\\s*",
      "end": "$",
      "contentName": "meta.bang.rainmeter",
      "beginCaptures": {
        "1": { "name": "entity.other.attribute-name.rainmeter" },
        "2": { "name": "punctuation.separator.key-value.rainmeter" }
      },
      "patterns": [
        { "include": "#numeric" },
        { "include": "#string-quoted" },
        { "include": "#bang-single" },
        { "include": "#bang-multiple" }
      ]
    },
    "bang-single": {
      "match": "(?<==\\s*)(!{0,1}\\w+)\\b",
      "captures": {
        "1": { "name": "support.function.bang.rainmeter" }
      }
    },
    "bang-multiple": {
      "Name": "meta.bang-multiple.rainmeter",
      "patterns": [
        {
          "match": "(\\[)(!{0,1}\\w+)\\b",
          "captures": {
            "1": { "name": "punctuation.definition.bang.begin.rainmeter" },
            "2": { "name": "support.function.bang.rainmeter" }
          }
        },
        { "include": "#numeric" },
        {
          "match": "\\]",
          "name": "punctuation.definition.bang.end.rainmeter"
        }
      ]
    },
    "numeric": {
      "name": "storage.type.number.rainmeter",
      "patterns": [
        {
          "match": "(?<!\\.)\\b(\\d+)\\b(?!\\.)",
          "captures": { "1": { "name": "constant.numeric.int.rainmeter" } }
        },
        {
          "match": "(?<!\\.)\\b(\\d+\\.\\d+)\\b(?!\\.)",
          "captures": { "1": { "name": "constant.numeric.float.rainmeter" } }
        },
        {
          "match": "(?<!\\.)\\b((0[xX])[0-9a-fA-F]+)\\b(?!\\.)",
          "captures": {
            "1": { "name": "constant.numeric.hex.rainmeter" },
            "2": { "name": "support.type.numeric.hex.rainmeter" }
          }
        },
        {
          "match": "(?<!\\.)\\b((0[oO])[0-7]+)\\b(?!\\.)",
          "captures": {
            "1": { "name": "constant.numeric.oct.rainmeter" },
            "2": { "name": "support.type.numeric.oct.rainmeter" }
          }
        },
        {
          "match": "(?<!\\.)\\b((0[bB])[01]+)\\b(?!\\.)",
          "captures": {
            "1": { "name": "constant.numeric.bin.rainmeter" },
            "2": { "name": "support.type.numeric.bin.rainmeter" }
          }
        }
      ]
    },
    "variable": {
      "patterns": [
        {
          "begin": "#",
          "end": "#",
          "contentName": "variable.other.readwrite.rainmeter",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.variable.begin.rainmeter" }
          },
          "endCaptures": {
            "0": { "name": "punctuation.definition.variable.begin.rainmeter" }
          }
        },
        {
          "begin": "$",
          "end": "$",
          "contentName": "variable.other.readwrite.event.rainmeter",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.variable.event.begin.rainmeter" }
          },
          "endCaptures": {
            "0": { "name": "punctuation.definition.variable.event.begin.rainmeter" }
          }
        },
        {
          "begin": "%",
          "end": "%",
          "contentName": "variable.other.readwrite.env.rainmeter",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.variable.env.begin.rainmeter" }
          },
          "endCaptures": {
            "0": { "name": "punctuation.definition.variable.env.begin.rainmeter" }
          }
        }
      ]
    },
    "string-unquoted": {
      "match": "\\w+",
      "name": "string.unquoted.rainmeter"
    },
    "string-quoted": {
      "patterns": [
        {
          "begin": "'",
          "end": "'",
          "contentName": "string.quoted.single.rainmeter",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.string.begin.rainmeter" }
          },
          "endCaptures": {
            "0": { "name": "punctuation.definition.string.begin.rainmeter" }
          }
        },
        {
          "begin": "\"",
          "end": "\"",
          "contentName": "string.quoted.double.rainmeter",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.string.begin.rainmeter" }
          },
          "endCaptures": {
            "0": { "name": "punctuation.definition.string.begin.rainmeter" }
          }
        }
      ]
    }
  }
}
